{"version":3,"sources":["StartPage.js","AccountDetails.js","ServicesPage.js","OffersPage.js","App.js","reportWebVitals.js","index.js"],"names":["StartPage","_useState","useState","username","password","_useState2","_slicedToArray","formData","setFormData","handleChange","e","_e$target","target","name","value","_objectSpread","_defineProperty","React","createElement","className","type","placeholder","onChange","onClick","window","location","href","AccountDetails","ServicesPage","OffersPage","App","Router","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"uPAuDeA,MArDf,WAAqB,IAAAC,EACaC,mBAAS,CACvCC,SAAU,GACVC,SAAU,KACVC,EAAAC,YAAAL,EAAA,GAHKM,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAKtBI,EAAe,SAACC,GAAM,IAAAC,EACFD,EAAEE,OAAlBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACdN,EAAWO,YAAA,GAAMR,EAAQS,YAAA,GAAGH,EAAOC,MASrC,OACEG,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,OAAKC,UAAU,aAEbF,IAAAC,cAAA,UAAI,0BACJD,IAAAC,cAAA,SAAG,qCAELD,IAAAC,cAAA,OAAKC,UAAU,cAEbF,IAAAC,cAAA,WACED,IAAAC,cAAA,SACEE,KAAK,OACLP,KAAK,WACLQ,YAAY,WACZP,MAAOP,EAASJ,SAChBmB,SAAUb,KAGdQ,IAAAC,cAAA,WACED,IAAAC,cAAA,SACEE,KAAK,WACLP,KAAK,WACLQ,YAAY,WACZP,MAAOP,EAASH,SAChBkB,SAAUb,KAIdQ,IAAAC,cAAA,UAAQK,QAlCM,WAGlBC,OAAOC,SAASC,KAAO,qBA+BW,SAE9BT,IAAAC,cAAA,UAAQK,QAAS,kBAAMC,OAAOC,SAASC,KAAO,cAAa,eC3BpDC,MAnBf,WAME,OACEV,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,UAAI,YAJc,WAIU,KAC5BD,IAAAC,cAAA,SAAG,mBANe,cAOlBD,IAAAC,cAAA,SAAG,oBARgB,aAWnBD,IAAAC,cAAA,UAAQK,QAAS,kBAAMC,OAAOC,SAASC,KAAO,cAAa,YAC3DT,IAAAC,cAAA,UAAQK,QAAS,kBAAMC,OAAOC,SAASC,KAAO,YAAW,YCJhDE,MAXf,WACE,OACEX,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,SAAG,qDCOMW,MAXf,WACE,OACEZ,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,SAAG,sECqBMY,MAnBf,WACE,OACEb,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAACa,IAAM,KACLd,IAAAC,cAAA,UAAQC,UAAU,cAEhBF,IAAAC,cAACc,IAAM,KACLf,IAAAC,cAACe,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,QAASnB,IAAAC,cAAClB,EAAS,QACzCiB,IAAAC,cAACe,IAAK,CAACE,KAAK,mBAAmBC,QAASnB,IAAAC,cAACS,EAAc,QAAM,IAC7DV,IAAAC,cAACe,IAAK,CAACE,KAAK,YAAYC,QAASnB,IAAAC,cAACU,EAAY,QAAM,IACpDX,IAAAC,cAACe,IAAK,CAACE,KAAK,UAAUC,QAASnB,IAAAC,cAACW,EAAU,QAAM,SCN7CQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA9B,EAAA,GAAA+B,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpC,IAAAC,cAACD,IAAMqC,WAAU,KACfrC,IAAAC,cAACY,EAAG,QAORO","file":"static/js/main.647b93e1.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction StartPage() {\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleLogin = () => {\n    // You can add authentication logic here\n    // For simplicity, we'll navigate to the main page\n    window.location.href = '/account-details';\n  };\n\n  return (\n    <div className=\"start-page\">\n      <div className=\"left-side\">\n        {/* Place your content for the left side here */}\n        <h2>Welcome to Canara Bank</h2>\n        <p>This is a POC of our PoS system.</p>\n      </div>\n      <div className=\"right-side\">\n        {/* Username and password input fields */}\n        <div>\n          <input\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Username\"\n            value={formData.username}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={formData.password}\n            onChange={handleChange}\n          />\n        </div>\n        {/* Login button */}\n        <button onClick={handleLogin}>Login</button>\n        {/* Register button */}\n        <button onClick={() => window.location.href = '/register'}>Register</button>\n      </div>\n    </div>\n  );\n}\n\nexport default StartPage;\n","\nimport React from 'react';\n\nfunction AccountDetails() {\n  // Replace these sample values with actual data from your application\n  const accountBalance = \"$5,000.00\";\n  const accountNumber = \"1234567890\";\n  const accountHolder = \"John Doe\";\n\n  return (\n    <div className=\"account-details\">\n      <h2>Welcome, {accountHolder}!</h2>\n      <p>Account Number: {accountNumber}</p>\n      <p>Account Balance: {accountBalance}</p>\n      \n      {/* Buttons for services and offers */}\n      <button onClick={() => window.location.href = '/services'}>Services</button>\n      <button onClick={() => window.location.href = '/offers'}>Offers</button>\n    </div>\n  );\n}\n\nexport default AccountDetails;\n","import React from 'react';\n\nfunction ServicesPage() {\n  return (\n    <div className=\"services-page\">\n      <h2>Our Services</h2>\n      <p>Explore the services we offer to our customers.</p>\n      \n      {/* Add your services content here */}\n    </div>\n  );\n}\n\nexport default ServicesPage;\n","import React from 'react';\n\nfunction OffersPage() {\n  return (\n    <div className=\"offers-page\">\n      <h2>Personalized Offers</h2>\n      <p>Check out our latest personalized offers for you.</p>\n      \n      {/* Add your offers content here */}\n    </div>\n  );\n}\n\nexport default OffersPage;\n","import React from 'react';\nimport './App.css';\nimport StartPage from './StartPage';\nimport AccountDetails from './AccountDetails'; // Renamed component\nimport ServicesPage from './ServicesPage'; // Create this component\nimport OffersPage from './OffersPage'; // Create this component\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <header className=\"App-header\">\n          {/* Use the Switch component to ensure only one route is matched */}\n          <Routes>\n            <Route exact path=\"/\" element={<StartPage/>} />\n            <Route path=\"/account-details\" element={<AccountDetails/>} /> {/* Updated route */}\n            <Route path=\"/services\" element={<ServicesPage/>} /> {/* Create this route */}\n            <Route path=\"/offers\" element={<OffersPage/>} /> {/* Create this route */}\n            {/* Add more routes for other pages as needed */}\n          </Routes>\n        </header>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}